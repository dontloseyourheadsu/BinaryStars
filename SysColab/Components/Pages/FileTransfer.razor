@page "/file-transfer"
@using SysColab.Models
@using SysColab.Services
@inject FileService FileService


<article>
    <h1 class="page-title">File Transfer</h1>

    <!-- Device Selector -->
    <div class="mb-3">
        <label for="deviceSelect" class="form-label">Choose Device</label>
        <select id="deviceSelect" class="form-control" @bind="SelectedDeviceAddress">
            <option value="">-- Select a Device --</option>
            @foreach (var device in Devices)
            {
                <option value="@device.Address">@device.Name (@device.Address)</option>
            }
        </select>
    </div>

    <!-- File Picker -->
    <div class="mb-3">
        <label for="fileInput" class="form-label">Select Files</label>
        <InputFile id="fileInput" OnChange="OnInputFileChanged" multiple class="form-control" />
    </div>

    <!-- Selected Files List -->
    <div class="mb-4">
        <h2 class="section-title">Selected Files</h2>
        @if (SelectedFiles.Any())
        {
            <ul class="simple-list mb-0">
                @foreach (var file in SelectedFiles)
                {
                    <li class="simple-list-item d-flex flex-column flex-sm-row justify-content-between align-items-start align-items-sm-center">
                        <div>
                            <strong>@file.Name</strong><br />
                            <small>@(file.Size / 1024) KB</small>
                        </div>
                        <div class="mt-2 mt-sm-0 flex-fill ms-sm-3">
                            <div class="progress">
                                <div class="progress-bar" role="progressbar" style="width:@file.Progress%" aria-valuemin="0" aria-valuemax="100">
                                    @file.Progress%
                                </div>
                            </div>
                        </div>
                    </li>
                }
            </ul>
        }
        else
        {
            <p class="mb-0">No files selected.</p>
        }
    </div>

    <!-- Send Button -->
    <button class="btn btn-primary" @onclick="SendFiles">
        Send Files
    </button>
</article>

@code {
    private List<DeviceInfo> Devices = new();
    private string SelectedDeviceAddress;
    private List<FileItem> SelectedFiles = new();

    protected override void OnInitialized()
    {
        // Mock devices for the dropdown
        Devices = new List<DeviceInfo>
        {
            new DeviceInfo("Device A", "00:11:22:33:AA:BB", true),
            new DeviceInfo("Device B", "00:11:22:33:CC:DD", true)
        };
    }

    private async Task OnInputFileChanged(InputFileChangeEventArgs e)
    {
        foreach (var file in e.GetMultipleFiles())
        {
            SelectedFiles.Add(new FileItem
                {
                    Name = file.Name,
                    Size = file.Size,
                    Progress = 0
                });
        }
    }

    private async Task SendFiles()
    {
        if (string.IsNullOrEmpty(SelectedDeviceAddress))
        {
            // Show error message
            return;
        }

        // Simulate file send progress
        foreach (var file in SelectedFiles)
        {
            for (int p = 0; p <= 100; p += 25)
            {
                file.Progress = p;
                StateHasChanged();
                await Task.Delay(200);
            }
        }

        // After send, clear list
        SelectedFiles.Clear();
    }
}
