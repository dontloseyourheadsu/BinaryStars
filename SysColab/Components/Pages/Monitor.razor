@page "/monitor"
@using SysColab.Components.Shared
@using SysColab.Models
@using SysColab.Services
@inherits SharedComponent
@inject IDeviceMetricService DeviceMetricService

<article>
    <h1 class="page-title">Device Monitor</h1>

    <!-- Device Selector -->
    <div class="mb-3">
        <label for="deviceSelect" class="form-label">Select Device</label>
        <select id="deviceSelect"
        class="form-control"
        @bind="SelectedDeviceId"
        @bind:event="onchange">
            <option value="">-- Select a Device --</option>
            @foreach (var d in OnlinePairedDevices)
            {
                <option value="@d.Id">
                    @d.Name (@d.Address)
                </option>
            }
        </select>
    </div>

    @if (SelectedDeviceId != Guid.Empty)
    {
        <div class="row g-4 mt-4 align-items-stretch">
            <!-- CPU Usage -->
            <div class="col-md-6 d-flex">
                <div class="card-surface h-100 flex-fill d-flex flex-column">
                    <h2 class="section-title">CPU Usage</h2>
                    <div class="flex-fill d-flex align-items-center">
                        <div class="progress w-100">
                            <div class="progress-bar"
                            role="progressbar"
                            style="width:@Metrics.CpuUsage%"
                            aria-valuenow="@Metrics.CpuUsage"
                            aria-valuemin="0"
                            aria-valuemax="100">
                                @Metrics.CpuUsage%
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- RAM Usage -->
            <div class="col-md-6 d-flex">
                <div class="card-surface h-100 flex-fill d-flex flex-column">
                    <h2 class="section-title">RAM Usage</h2>
                    <div class="flex-fill d-flex align-items-center">
                        <div class="progress w-100">
                            <div class="progress-bar"
                            role="progressbar"
                            style="width:@Metrics.RamUsage%"
                            aria-valuenow="@Metrics.RamUsage"
                            aria-valuemin="0"
                            aria-valuemax="100">
                                @Metrics.RamUsage%
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Storage Usage -->
            <div class="col-md-6 d-flex">
                <div class="card-surface h-100 flex-fill d-flex flex-column">
                    <h2 class="section-title">Storage Usage</h2>
                    <div class="flex-fill d-flex align-items-center">
                        <div class="progress w-100">
                            <div class="progress-bar"
                            role="progressbar"
                            style="width:@Metrics.StorageUsage%"
                            aria-valuenow="@Metrics.StorageUsage"
                            aria-valuemin="0"
                            aria-valuemax="100">
                                @Metrics.StorageUsage%
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Network Throughput -->
            <div class="col-md-6 d-flex">
                <div class="card-surface h-100 flex-fill d-flex flex-column">
                    <h2 class="section-title">Network Throughput</h2>
                    <div class="flex-fill">
                        <p class="mb-2">Up: @Metrics.NetworkUp KB/s</p>
                        <p class="mb-0">Down: @Metrics.NetworkDown KB/s</p>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <p>Please select a device to monitor.</p>
    }
</article>

@code {
    private DeviceMetrics Metrics = new DeviceMetrics();

    private Guid? selectedDeviceId;
    public Guid SelectedDeviceId
    {
        get => selectedDeviceId ?? Guid.Empty;
        set
        {
            if (selectedDeviceId != value)
            {
                selectedDeviceId = value;
                LoadMetricsFor(value);
            }
        }
    }

    private void LoadMetricsFor(Guid id)
    {
        if (id == Guid.Empty)
        {
            return;
        }

        Metrics = new DeviceMetrics
        {
            CpuUsage = DeviceMetricService.GetCpuUsage(),
            RamUsage = DeviceMetricService.GetRamUsage(),
            StorageUsage = DeviceMetricService.GetStorageUsage(),
            NetworkUp = DeviceMetricService.GetNetworkUploadSpeed(),
            NetworkDown = DeviceMetricService.GetNetworkDownloadSpeed()
        };
    }
}
