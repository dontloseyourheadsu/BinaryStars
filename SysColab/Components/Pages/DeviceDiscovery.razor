@page "/device-discovery"
@using SysColab.Services
@using SysColab.Models
@inject NavigationManager Navigation
@inject ConnectivityService ConnectivityService

<article>
    <h1 class="page-title">Device Discovery</h1>
    <div class="my-4">
        <button class="btn btn-primary" @onclick="ScanDevices">
            <span>Scan for Devices</span>
        </button>
    </div>
    <div>
        @if (Devices.Any())
        {
            <ul class="simple-list mb-0">
                @foreach (var device in Devices)
                {
                    <li class="simple-list-item d-flex justify-content-between align-items-center">
                        <div>
                            <strong>@device.Name</strong><br />
                            <small>@device.Address</small>
                        </div>
                        <button class="btn btn-outline-primary btn-sm" @onclick="() => Connect(device)">
                            @(device.IsPaired ? "Reconnect" : "Pair")
                        </button>
                    </li>
                }
            </ul>
        }
        else
        {
            <p>No devices scanned.</p>
        }
    </div>
</article>

@code {
    private List<DeviceInfo> Devices = new();

    protected override async Task OnInitializedAsync()
    {
        
    }

    private void ScanDevices()
    {
        Devices.Clear();
        StateHasChanged();

        //var scannedDevices = ConnectivityService.ScanForDevices();

        //foreach (var device in scannedDevices)
        //{
        //    Devices.Add(new DeviceInfo(device.Name ?? "Unknown", device.Uuid, device.Status == Shiny.BluetoothLE.ConnectionState.Connected));
        //}

        StateHasChanged();
    }

    private void Connect(DeviceInfo device)
    {
        // Mock connect/pair logic
        device.IsPaired = true;
    }
}
